<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Frank Reininghaus (Posts about kubernetes)</title><link>https://freininghaus.github.io/</link><description></description><atom:link href="https://freininghaus.github.io/categories/kubernetes.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2022 &lt;a href="mailto:frank78ac@googlemail.com"&gt;Frank Reininghaus&lt;/a&gt; </copyright><lastBuildDate>Tue, 12 Jul 2022 21:12:09 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>How to set up a local Kubernetes cluster and deploy a self-made microservice in less than 10 minutes</title><link>https://freininghaus.github.io/blog/2022/07/12/set-up-local-k8s-cluster-and-deploy-self-made-microservice/</link><dc:creator>Frank Reininghaus</dc:creator><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Nowadays, many server applications are not installed and run directly on physical hosts or virtual machines any more. Instead, application code is often built into container images, and run in so-called &lt;em&gt;pods&lt;/em&gt; in a Kubernetes cluster. Kubernetes provides a standardized way to orchestrate applications and works the same way no matter where the cluster is running.&lt;/p&gt;
&lt;p&gt;Kubernetes clusters are often hosted and managed by cloud providers. They can also be deployed on-premise though, and either be created and managed by a service provider, or with tools like &lt;a href="https://github.com/kubernetes-sigs/kubespray"&gt;Kubespray&lt;/a&gt;. Most clusters are long-lived, and consist of multiple nodes for redundancy.&lt;/p&gt;
&lt;p&gt;However, sometimes a cluster that can be created and discarded quickly and easily on a single computer can be very useful:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A developer might want to create a cluster on their development machine for playing around with Kubernetes, exploring the newest tools, or testing their newly developed code and Kubernetes resources. If they used a cluster that is shared with others or even with production workloads instead, they might get into the way of others, or worse, break things that should better not break.&lt;/li&gt;
&lt;li&gt;Another use case is automated testing of application deployments in Kubernetes, or testing of applications that interact with Kubernetes resources themselves. This works best in a dedicated cluster that is set up in a clean state just for this purpose, and thrown away after the tests.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://freininghaus.github.io/blog/2022/07/12/set-up-local-k8s-cluster-and-deploy-self-made-microservice/"&gt;Read more…&lt;/a&gt; (14 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>docker</category><category>kubernetes</category><guid>https://freininghaus.github.io/blog/2022/07/12/set-up-local-k8s-cluster-and-deploy-self-made-microservice/</guid><pubDate>Tue, 12 Jul 2022 20:01:51 GMT</pubDate></item></channel></rss>